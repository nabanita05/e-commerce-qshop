!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@nlux/openai"),require("react"),require("@nlux/react")):"function"==typeof define&&define.amd?define(["exports","@nlux/openai","react","@nlux/react"],t):t((e="undefined"!=typeof globalThis?globalThis:e||self)["@nlux/openai-react"]={},e.openai,e.react$1,e.react)}(this,(function(e,t,r,a){"use strict";const s="hooks/getAdapterBuilder",n=e=>{const{apiKey:r,dataTransferMode:n,systemMessage:o,model:i}=e||{};if(n&&"stream"!==n&&"fetch"!==n)throw new a.NluxUsageError({source:s,message:"Data transfer mode not supported"});if(!r)throw new a.NluxUsageError({source:s,message:"API key is required"});let u=t.createUnsafeChatAdapter().withApiKey(r);return void 0!==i&&(u=u.withModel(i)),n&&(u=u.withDataTransferMode(n)),o&&(u=u.withSystemMessage(o)),u};Object.defineProperty(e,"createUnsafeChatAdapter",{enumerable:!0,get:function(){return t.createUnsafeChatAdapter}}),e.useUnsafeChatAdapter=e=>{const[t,a]=r.useState(!1),[s,o]=r.useState(n(e)),{apiKey:i,dataTransferMode:u,systemMessage:d,model:f}=e||{};return r.useEffect((()=>{if(!t)return void a(!0);const r=n(e);o(r)}),[i,u,d,f]),s}}));
